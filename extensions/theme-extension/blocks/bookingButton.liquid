{% assign button_text = block.settings.button_text | default: "Book Now" %}
{% assign show_staff_selection = block.settings.show_staff_selection | default: true %}
{% assign button_color = block.settings.button_color | default: "#000000" %}
{% assign button_text_color = block.settings.button_text_color | default: "#FFFFFF" %}
{% assign button_padding = block.settings.button_padding | default: 10 %}
{% assign button_radius = block.settings.button_radius | default: 4 %}
{% assign booking_instructions = block.settings.booking_instructions | default: "Select a date, time and barber to book this service." %}

<div class="barbershop-booking-container">
  <!-- Booking Button -->
  <button 
    class="barbershop-booking-btn" 
    id="barbershop-booking-btn"
    style="
      background-color: {{ button_color }};
      color: {{ button_text_color }};
      padding: {{ button_padding }}px {{ button_padding | times: 1.5 }}px;
      border-radius: {{ button_radius }}px;
      border: none;
      cursor: pointer;
      font-size: 16px;
      font-weight: 600;
      width: 100%;
      max-width: 300px;
      transition: opacity 0.2s ease, transform 0.1s ease;
    "
    onclick="openBookingModal()">
    {{ button_text }}
  </button>

  <!-- Booking Modal -->
  <div class="barbershop-modal" id="barbershop-modal" style="
    display: none;
    position: fixed;
    z-index: 9999;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    overflow: auto;
    background-color: rgba(0,0,0,0.4);
  ">
    <div class="barbershop-modal-content" style="
      background-color: #fefefe;
      margin: 5% auto;
      padding: 20px;
      border: none;
      border-radius: 8px;
      width: 90%;
      max-width: 500px;
      position: relative;
      box-shadow: 0 4px 20px rgba(0,0,0,0.15);
    ">
      <!-- Close Button -->
      <span class="barbershop-close" style="
        color: #aaa;
        float: right;
        font-size: 28px;
        font-weight: bold;
        cursor: pointer;
        position: absolute;
        right: 15px;
        top: 10px;
      " onclick="closeBookingModal()">&times;</span>

      <!-- Modal Content -->
      <div class="barbershop-modal-body">
        <h2 style="margin-top: 0; margin-bottom: 15px;">Book Your Appointment</h2>
        <p style="color: #666; margin-bottom: 20px;">{{ booking_instructions }}</p>

        <!-- Loading State -->
        <div id="booking-loading" style="display: none; text-align: center; padding: 20px;">
          <p>Loading booking options...</p>
        </div>

        <!-- Error State -->
        <div id="booking-error" style="display: none; color: #d32f2f; padding: 10px; background: #ffebee; border-radius: 4px; margin-bottom: 15px;">
        </div>

        <!-- Success State -->
        <div id="booking-success" style="display: none; color: #2e7d32; padding: 10px; background: #e8f5e8; border-radius: 4px; margin-bottom: 15px;">
        </div>

        <!-- Booking Form -->
        <form id="booking-form" class="barbershop-booking-form">
          <!-- Service Selection -->
          <div style="margin-bottom: 15px;">
            <label style="display: block; margin-bottom: 5px; font-weight: 600;">Select Service *</label>
            <select id="service-select" required style="
              width: 100%;
              padding: 10px;
              border: 1px solid #ddd;
              border-radius: 4px;
              font-size: 14px;
              box-sizing: border-box;
            ">
              <option value="">Select a service</option>
            </select>
          </div>

          <!-- Staff Selection -->
          {% if show_staff_selection %}
          <div style="margin-bottom: 15px;">
            <label style="display: block; margin-bottom: 5px; font-weight: 600;">Select Barber *</label>
            <select id="staff-select" required style="
              width: 100%;
              padding: 10px;
              border: 1px solid #ddd;
              border-radius: 4px;
              font-size: 14px;
              box-sizing: border-box;
            ">
              <option value="">Select a barber</option>
            </select>
          </div>
          {% endif %}

          <!-- Location Selection -->
          <div style="margin-bottom: 15px;">
            <label style="display: block; margin-bottom: 5px; font-weight: 600;">Location *</label>
            <select id="location-select" required style="
              width: 100%;
              padding: 10px;
              border: 1px solid #ddd;
              border-radius: 4px;
              font-size: 14px;
              box-sizing: border-box;
            ">
              <option value="">Select a location</option>
            </select>
          </div>

          <!-- Date Selection -->
          <div style="margin-bottom: 15px;">
            <label style="display: block; margin-bottom: 5px; font-weight: 600;">Date *</label>
            <input type="date" id="booking-date" required style="
              width: 100%;
              padding: 10px;
              border: 1px solid #ddd;
              border-radius: 4px;
              font-size: 14px;
              box-sizing: border-box;
            ">
          </div>

          <!-- Time Selection -->
          <div style="margin-bottom: 15px;">
            <label style="display: block; margin-bottom: 5px; font-weight: 600;">Time *</label>
            <select id="time-select" required style="
              width: 100%;
              padding: 10px;
              border: 1px solid #ddd;
              border-radius: 4px;
              font-size: 14px;
              box-sizing: border-box;
            ">
              <option value="">Select a date first</option>
            </select>
          </div>

          <!-- Duration -->
          <div style="margin-bottom: 15px;">
            <label style="display: block; margin-bottom: 5px; font-weight: 600;">Duration (minutes) *</label>
            <input type="number" id="duration" min="15" max="240" step="15" value="60" required style="
              width: 100%;
              padding: 10px;
              border: 1px solid #ddd;
              border-radius: 4px;
              font-size: 14px;
              box-sizing: border-box;
            ">
          </div>

          <!-- Customer Information -->
          <div style="margin-bottom: 15px;">
            <label style="display: block; margin-bottom: 5px; font-weight: 600;">Your Name *</label>
            <input type="text" id="customer-name" required style="
              width: 100%;
              padding: 10px;
              border: 1px solid #ddd;
              border-radius: 4px;
              font-size: 14px;
              box-sizing: border-box;
            ">
          </div>

          <div style="margin-bottom: 15px;">
            <label style="display: block; margin-bottom: 5px; font-weight: 600;">Email Address *</label>
            <input type="email" id="customer-email" required style="
              width: 100%;
              padding: 10px;
              border: 1px solid #ddd;
              border-radius: 4px;
              font-size: 14px;
              box-sizing: border-box;
            ">
          </div>

          <!-- Notes -->
          <div style="margin-bottom: 20px;">
            <label style="display: block; margin-bottom: 5px; font-weight: 600;">Special Notes</label>
            <textarea id="notes" rows="3" placeholder="Any special requests or notes..." style="
              width: 100%;
              padding: 10px;
              border: 1px solid #ddd;
              border-radius: 4px;
              font-size: 14px;
              resize: vertical;
              box-sizing: border-box;
            "></textarea>
          </div>

          <!-- Submit Button -->
          <button type="submit" style="
            background-color: {{ button_color }};
            color: {{ button_text_color }};
            padding: 12px 20px;
            border: none;
            border-radius: {{ button_radius }}px;
            font-size: 16px;
            font-weight: 600;
            width: 100%;
            cursor: pointer;
            transition: opacity 0.2s ease;
          " id="submit-booking">
            Confirm Booking
          </button>
        </form>
      </div>
    </div>
  </div>
</div>

<style>
.barbershop-booking-btn:hover {
  opacity: 0.9;
  transform: translateY(-1px);
}

.barbershop-booking-btn:active {
  transform: translateY(0);
}

.barbershop-close:hover {
  color: black;
  opacity: 0.7;
}

@media (max-width: 768px) {
  .barbershop-modal-content {
    margin: 10% auto;
    width: 95%;
    padding: 15px;
  }
  
  .barbershop-booking-btn {
    font-size: 14px;
  }
}
</style>

<script>
// Utility functions for UI manipulation
function setLoading(show) {
  const loadingElement = document.getElementById('booking-loading');
  const formElement = document.getElementById('booking-form');
  
  if (loadingElement) {
    loadingElement.style.display = show ? 'block' : 'none';
  }
  if (formElement) {
    formElement.style.display = show ? 'none' : 'block';
  }
}

function hideMessage(type) {
  const messageElement = document.getElementById(`booking-${type}`);
  if (messageElement) {
    messageElement.style.display = 'none';
  }
}

function showMessage(type, message) {
  const messageElement = document.getElementById(`booking-${type}`);
  if (messageElement) {
    messageElement.textContent = message;
    messageElement.style.display = 'block';
  }
}

function closeBookingModal() {
  const modal = document.getElementById('barbershop-modal');
  if (modal) {
    modal.style.display = 'none';
  }
  
  // Reset form
  const form = document.getElementById('booking-form');
  if (form) {
    form.reset();
  }
  
  // Hide any messages
  hideMessage('error');
  hideMessage('success');
  
  // Reset time select
  const timeSelect = document.getElementById('time-select');
  if (timeSelect) {
    timeSelect.innerHTML = '<option value="">Select a date first</option>';
  }
}

async function loadBookingOptions() {
  console.log('Loading booking options');
  
  setLoading(true);
  hideMessage('error');

  try {
    // Fetch booking data from our backend route
    const response = await fetch('/apps/barbershop/api/booking-data');
    
    if (!response.ok) {
      throw new Error(`HTTP error! status: ${response.status}`);
    }
    
    const data = await response.json();
    console.log('Loaded booking data:', data);

    // Populate services dropdown
    const serviceSelect = document.getElementById('service-select');
    if (serviceSelect && data.services.length > 0) {
      serviceSelect.innerHTML = '<option value="">Select a service</option>';
      data.services.forEach(service => {
        const option = document.createElement('option');
        option.value = service.id;
        option.textContent = service.title;
        serviceSelect.appendChild(option);
      });
    } else if (serviceSelect) {
      serviceSelect.innerHTML = '<option value="">No services available</option>';
    }

    // Populate staff dropdown
    const staffSelect = document.getElementById('staff-select');
    if (staffSelect && data.staff.length > 0) {
      staffSelect.innerHTML = '<option value="">Select a barber</option>';
      data.staff.forEach(member => {
        const option = document.createElement('option');
        option.value = member.id;
        option.textContent = member.name;
        staffSelect.appendChild(option);
      });
    } else if (staffSelect) {
      staffSelect.innerHTML = '<option value="">No staff available</option>';
    }

    // Populate location dropdown
    const locationSelect = document.getElementById('location-select');
    if (locationSelect && data.locations.length > 0) {
      locationSelect.innerHTML = '<option value="">Select a location</option>';
      data.locations.forEach(location => {
        const option = document.createElement('option');
        option.value = location.id;
        option.textContent = `${location.name} - ${location.address1}, ${location.city}`;
        locationSelect.appendChild(option);
      });
    } else if (locationSelect) {
      locationSelect.innerHTML = '<option value="">No locations available</option>';
    }

    setLoading(false);

  } catch (error) {
    console.error('Error loading booking options:', error);
    setLoading(false);
    showMessage('error', 'Failed to load booking options. Please try again.');
  }
}

// Generate time slots
function generateTimeSlots() {
  const slots = [];
  for (let hour = 9; hour < 18; hour++) {
    for (let minute = 0; minute < 60; minute += 30) {
      const timeString = `${hour.toString().padStart(2, '0')}:${minute.toString().padStart(2, '0')}`;
      slots.push(timeString);
    }
  }
  return slots;
}

// Update time slots when date changes
document.addEventListener('change', function(e) {
  if (e.target.id === 'booking-date') {
    const timeSelect = document.getElementById('time-select');
    
    if (timeSelect) {
      timeSelect.innerHTML = '<option value="">Select a time</option>';
      const timeSlots = generateTimeSlots();
      
      timeSlots.forEach(time => {
        const option = document.createElement('option');
        option.value = time;
        option.textContent = time;
        timeSelect.appendChild(option);
      });
    }
  }
});

// Handle form submission
document.addEventListener('submit', async function(e) {
  if (e.target.id === 'booking-form') {
    e.preventDefault();
    
    console.log('Submitting booking form');
    
    await submitBooking();
  }
});

async function submitBooking() {
  const submitButton = document.getElementById('submit-booking');
  const originalText = submitButton.textContent;
  
  submitButton.textContent = 'Processing...';
  submitButton.disabled = true;
  hideMessage('error');
  hideMessage('success');

  try {
    // Collect form data
    const serviceId = document.getElementById('service-select').value;
    const customerName = document.getElementById('customer-name').value;
    const customerEmail = document.getElementById('customer-email').value;
    const staffId = document.getElementById('staff-select').value;
    const locationId = document.getElementById('location-select').value;
    const bookingDate = document.getElementById('booking-date').value;
    const bookingTime = document.getElementById('time-select').value;
    const duration = parseInt(document.getElementById('duration').value);
    const notes = document.getElementById('notes').value;

    // Validate required fields
    if (!serviceId || !customerName || !customerEmail || !locationId || !bookingDate || !bookingTime || !duration) {
      showMessage('error', 'Please fill in all required fields.');
      submitButton.textContent = originalText;
      submitButton.disabled = false;
      return;
    }

    // Validate staff selection if required
    const staffSelect = document.getElementById('staff-select');
    if (staffSelect && staffSelect.offsetParent !== null && !staffId) {
      showMessage('error', 'Please select a barber.');
      submitButton.textContent = originalText;
      submitButton.disabled = false;
      return;
    }

    // Create booking object
    const bookingData = {
      serviceId: serviceId,
      customerName: customerName,
      customerEmail: customerEmail,
      locationId: locationId,
      bookingDate: bookingDate,
      bookingTime: bookingTime,
      duration: duration,
      notes: notes
    };

    // Add staff ID if staff selection is enabled
    if (staffId) {
      bookingData.staffId = staffId;
    }

    console.log('Submitting booking:', bookingData);

    // Submit booking
    const response = await fetch('/apps/barbershop/api/submit-booking', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify(bookingData)
    });

    if (!response.ok) {
      const errorData = await response.json().catch(() => ({}));
      throw new Error(errorData.message || `HTTP error! status: ${response.status}`);
    }

    const result = await response.json();
    console.log('Booking submitted successfully:', result);

    // Show success message
    showMessage('success', 'Booking confirmed! You will receive a confirmation email shortly.');
    
    // Reset form after successful submission
    document.getElementById('booking-form').reset();
    
    // Hide form and show success state
    document.getElementById('booking-form').style.display = 'none';
    
    // Auto-close modal after 3 seconds
    setTimeout(() => {
      closeBookingModal();
    }, 3000);

  } catch (error) {
    console.error('Error submitting booking:', error);
    showMessage('error', error.message || 'Failed to submit booking. Please try again.');
  } finally {
    // Reset submit button
    submitButton.textContent = originalText;
    submitButton.disabled = false;
  }
}

async function openBookingModal() {
  console.log('Opening booking modal');
  
  const modal = document.getElementById('barbershop-modal');
  if (modal) {
    modal.style.display = 'block';
    
    // Set minimum date to today
    const today = new Date().toISOString().split('T')[0];
    const dateInput = document.getElementById('booking-date');
    if (dateInput) {
      dateInput.setAttribute('min', today);
      dateInput.value = today;
      // Trigger change event to populate time slots
      dateInput.dispatchEvent(new Event('change'));
    }
    
    // Load booking options
    await loadBookingOptions();
  }
}

// Close modal when clicking outside
window.addEventListener('click', function(event) {
  if (event.target.id === 'barbershop-modal') {
    closeBookingModal();
  }
});

console.log('Barbershop booking widget initialized');
</script>

{% schema %}
{
  "name": "Barbershop Booking Button",
  "target": "section",
  "settings": [
    {
      "type": "text",
      "label": "Button Text",
      "id": "button_text",
      "default": "Book Now"
    },
    {
      "type": "checkbox",
      "label": "Show Staff Selection",
      "id": "show_staff_selection",
      "default": true
    },
    {
      "type": "checkbox",
      "label": "Only Show for Barber Services",
      "id": "only_show_for_services",
      "default": true
    },
    {
      "type": "color",
      "label": "Button Background Color",
      "id": "button_color",
      "default": "#000000"
    },
    {
      "type": "color",
      "label": "Button Text Color",
      "id": "button_text_color",
      "default": "#FFFFFF"
    },
    {
      "type": "range",
      "label": "Button Padding (px)",
      "id": "button_padding",
      "min": 5,
      "max": 20,
      "step": 1,
      "default": 10
    },
    {
      "type": "range",
      "label": "Button Border Radius (px)",
      "id": "button_radius",
      "min": 0,
      "max": 20,
      "step": 1,
      "default": 4
    },
    {
      "type": "textarea",
      "label": "Booking Instructions",
      "id": "booking_instructions",
      "default": "Select a date, time and barber to book this service.",
      "info": "Instructions shown at the top of the booking modal"
    }
  ]
}
{% endschema %}
